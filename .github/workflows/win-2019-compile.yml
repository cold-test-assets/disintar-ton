name: Windows Server 2019 x64 Compile

on: [push,workflow_dispatch,workflow_call]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: cmd

jobs:
  build:
    strategy:
      matrix:
        python: [39, 310, 311]
    runs-on: windows-2019

    steps:
      - name: Get Current OS version
        run: |
          systeminfo | findstr /B /C:"OS Name" /C:"OS Version"

      - name: Check out current repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Check out zlib repository
        uses: actions/checkout@v3
        with:
          repository: desktop-app/zlib
          path: zlib

      - name: Setup msbuild.exe
        uses: microsoft/setup-msbuild@v1.1

      - name: Install Pkg-config Lite
        run: choco install pkgconfiglite

      - name: Compile zlib Win64
        run: |
          cd zlib\contrib\vstudio\vc14
          msbuild zlibstat.vcxproj /p:Configuration=ReleaseWithoutAsm /p:platform=x64 -p:PlatformToolset=v142

      - name: Compile secp256k1 Win64
        run: |
          git clone https://github.com/libbitcoin/secp256k1.git
          cd secp256k1\builds\msvc\vs2017
          msbuild /p:Configuration=StaticRelease -p:PlatformToolset=v142 -p:Platform=x64

      - name: Install pre-compiled libsodium Win64
        run: |
          curl  -Lo libsodium-1.0.18-stable-msvc.zip https://download.libsodium.org/libsodium/releases/libsodium-1.0.18-stable-msvc.zip
          unzip libsodium-1.0.18-stable-msvc.zip

      - name: Install pre-compiled OpenSSL Win64
        run: |
          curl  -Lo openssl-1.1.1j.zip https://github.com/neodiX42/precompiled-openssl-win64/raw/main/openssl-1.1.1j.zip
          jar xf openssl-1.1.1j.zip

      - name: Install pre-compiled libmicrohttpd Win64
        run: |
          curl  -Lo libmicrohttpd-0.9.77-w32-bin.zip https://github.com/neodiX42/precompiled-openssl-win64/raw/main/libmicrohttpd-0.9.77-w32-bin.zip
          unzip libmicrohttpd-0.9.77-w32-bin.zip

      - name: Install pre-compiled Readline Win64
        run: |
          curl  -Lo readline-5.0-1-lib.zip https://github.com/neodiX42/precompiled-openssl-win64/raw/main/readline-5.0-1-lib.zip
          unzip readline-5.0-1-lib.zip

      - run: choco install -y python${{ matrix.python }}

      - name: Compile
        run: |
          set root=%cd%
          set SODIUM_DIR=%root%\libsodium
          echo %root%
          echo %SODIUM_DIR%
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DTON_USE_PYTHON=1 -DTON_USE_ABSEIL=0 -DSODIUM_USE_STATIC_LIBS=1 -DSECP256K1_INCLUDE_DIR=%root%\secp256k1\include -DSECP256K1_LIBRARY=%root%\secp256k1\bin\x64\Release\v142\static\secp256k1.lib -DREADLINE_INCLUDE_DIR=%root%\readline-5.0-1-lib\include\readline -DREADLINE_LIBRARY=%root%\readline-5.0-1-lib\lib\readline.lib -DPORTABLE=1 -DZLIB_FOUND=1 -DMHD_FOUND=1 -DMHD_LIBRARY=%root%\libmicrohttpd-0.9.77-w32-bin\x86_64\VS2019\Release-static\libmicrohttpd.lib -DMHD_INCLUDE_DIR=%root%\libmicrohttpd-0.9.77-w32-bin\x86_64\VS2019\Release-static -DZLIB_INCLUDE_DIR=%root%\zlib -DZLIB_LIBRARY=%root%\zlib\contrib\vstudio\vc14\x64\ZlibStatReleaseWithoutAsm\zlibstat.lib -DOPENSSL_FOUND=1 -DOPENSSL_INCLUDE_DIR=%root%/openssl-1.1.1j/include -DOPENSSL_CRYPTO_LIBRARY=%root%/openssl-1.1.1j/lib/libcrypto_static.lib -DCMAKE_CXX_FLAGS="/DTD_WINDOWS=1 /EHsc /bigobj /W0" ..
          cmake --build . --target python_ton

      - name: Find & copy binaries
        run: |
          mkdir artifacts
          xcopy /i "build\tvm-python\Release\*.pyd" "artifacts\"

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: ton-x86_64-windows-python-${{ matrix.python }}
          path: artifacts
